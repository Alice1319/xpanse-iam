version: "3.8"

services:
  zitadel:
    restart: "always"
    networks:
      - "zitadel"
    image: "ghcr.io/zitadel/zitadel:stable"
    command: 'start-from-init --config /zitadel-config.yaml --config /zitadel-secrets.yaml --steps /zitadel-init-steps.yaml --masterkey "${ZITADEL_MASTERKEY}" --tlsMode external'
    depends_on:
      certs:
        condition: "service_completed_successfully"
    ports:
      - "8080:8080"
    volumes:
      - "./zitadel-config.yaml:/zitadel-config.yaml:ro"
      - "./zitadel-secrets.yaml:/zitadel-secrets.yaml:ro"
      - "./zitadel-init-steps.yaml:/zitadel-init-steps.yaml:ro"
      - "zitadel-certs:/crdb-certs:ro"

  certs:
    image: "cockroachdb/cockroach:v22.2.2"
    entrypoint: ["/bin/bash", "-c"]
    command:
      [
        "cp /certs/* /zitadel-certs/ && cockroach cert create-client --overwrite --certs-dir /zitadel-certs/ --ca-key /zitadel-certs/ca.key zitadel_user && chown 1000:1000 /zitadel-certs/*",
      ]
    volumes:
      - "certs:/certs:ro"
      - "zitadel-certs:/zitadel-certs:rw"
    depends_on:
      cockroach-db:
        condition: "service_healthy"

  cockroach-db:
    restart: "always"
    networks:
      - "zitadel"
    image: "cockroachdb/cockroach:v22.2.2"
    command: "start-single-node --advertise-addr cockroach-db"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
    ports:
      - "9090:8080"
      - "26257:26257"
    volumes:
      - "certs:/cockroach/certs:rw"
      - "data:/cockroach/cockroach-data:rw"

  webserver:
    image: nginx:latest
    networks:
      - "zitadel"
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./volume/nginx/conf/:/etc/nginx/conf.d/:ro
      - ./volume/certbot/www:/var/www/certbot/:ro
      - ./volume/certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot
    volumes:
      - ./volume/certbot/www/:/var/www/certbot/:rw
      - ./volume/certbot/conf/:/etc/letsencrypt/:rw

networks:
  zitadel:

volumes:
  certs:
  zitadel-certs:
  data:
